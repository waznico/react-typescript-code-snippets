{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React simple stateless function component": {
		"prefix": "sislfc",
		"body": [
			"import React from 'react';",
			"",
			"const ${1:modulename}: React.FC = (${2:props}) => {",
			"\treturn (",
			"\t\t<>",
			"\t\t\t$0",
			"\t\t</>",
			"\t);",
			"};",
			"",
			"export default ${1:modulename};"
		],
		"description": "Creates a simple stateless function component"
	},
	"React typed stateless function component": {
		"prefix": "tslfc",
		"body": [
			"import React from 'react';",
			"",
			"interface ${1:typename} {",
			"\t${2:props}",
			"}",
			"",
			"const ${3:modulename}: React.FC<${1:typename}> = (${4:props}) => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"};",
			"",
			"export default ${3:modulename};"
		],
		"description": "Creates a typed stateless function component"
	}
}